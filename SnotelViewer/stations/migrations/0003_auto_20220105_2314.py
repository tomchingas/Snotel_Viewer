# Generated by Django 4.0.1 on 2022-01-05 23:14

from django.db import migrations
import csv
from django.contrib.gis.geos import fromstr
from pathlib import Path
import pandas as pd

# station metadata csv file created from here:
# https://wcc.sc.egov.usda.gov/reportGenerator/view/customMultiTimeSeriesGroupByStationReport/daily/start_of_period/network=%22SNTL%22%20AND%20outServiceDate=%222100-01-01%22%7Cname/0,0/name,stationId,state.code,state.name,network.code,network.name,elevation,latitude,longitude,county.name,county.code,huc2.huc,huc2.hucName,huc4.huc,huc4.hucName,huc6.huc,huc6.hucName,huc8.huc,huc8.hucName,huc10.huc,huc10.hucName,huc12.huc,huc12.hucName,reportTimeZone.offset,dco.code,actonId,shefId,inServiceDate,outServiceDate?fitToScreen=false
# save in BASE_DIR as 'station_metadata.csv'

DATA_FILENAME = 'station_metadata.csv'
def load_data(apps, schema_editor):
    Station = apps.get_model('stations', 'Station')
    csvfile = Path(__file__).parents[3] / DATA_FILENAME
    df = pd.read_csv(csvfile)

    for index, row in df.iterrows():    
        triple_id = str(df.loc[index,'Station Id']) + ':' + str(df.loc[index,'State Code']) + ':' + str(df.loc[index,'Network Code'])
        station_name = df.loc[index, 'Station Name']
        station_id = df.loc[index, 'Station Id']
        state_code = df.loc[index, 'State Code']
        state_name = df.loc[index, 'State Name']
        network_code = df.loc[index, 'Network Code']
        network_name = df.loc[index, 'Network Name']
        elevation = df.loc[index, 'Elevation']
        longitude = df.loc[index, 'Longitude']
        latitude = df.loc[index, 'Latitude']
        location = fromstr(f'POINT({longitude} {latitude})', srid=4326)
        county_name = df.loc[index, 'County Name']
        start_date = df.loc[index, 'Start Date']
        end_date = df.loc[index, 'End Date']
        Station(triple_id=triple_id, station_name=station_name, station_id=station_id, state_code=state_code, state_name=state_name, network_code=network_code, network_name=network_name, elevation=elevation, location=location, county_name=county_name, start_date=start_date, end_date=end_date).save()


class Migration(migrations.Migration):

    dependencies = [
        ('stations', '0002_rename_stations_station'),
    ]

    operations = [
        migrations.RunPython(load_data)
    ]
